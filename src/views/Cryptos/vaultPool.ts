import { DeserializedPool, VaultKey } from 'state/types'
import { PoolCategory } from 'config/constants/types'
import BigNumber from 'bignumber.js'

export const vaultPool: DeserializedPool = {
  // Master Chef Contract
  apr: 5365.414191755587,
  contractAddress: {
    56: '0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652',
    97: '',
    4: '0x3FcAfBA7618280EfE955C64F9577793EBEd3DA68',
  },
  // earningToken: {
  //   address: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',
  //   chainId: 56,
  //   decimals: 18,
  //   name: 'PancakeSwap Token',
  //   projectLink: 'https://pancakeswap.finance/',
  //   symbol: 'CAKE',
  // },
  earningToken: {
    address: '0x0abC957925EC8f71dA8556AB6147E1Bc32e5F0Fe',
    chainId: 4,
    decimals: 18,
    name: 'Cryptos Token',
    projectLink: 'https://pancakeswap.finance/',
    symbol: 'CRYPTOS',
  },
  earningTokenPrice: 0.194972,
  fees: {
    performanceFee: 200,
    performanceFeeAsDecimal: 2,
    withdrawalFee: 10,
    withdrawalFeePeriod: 259200,
  },
  harvest: true,
  isFinished: false,
  poolCategory: PoolCategory.CORE,
  profileRequirement: undefined,
  sortOrder: 1,
  sousId: 0,
  vaultKey: VaultKey.CakeVault,
  stakingLimitEndBlock: NaN,
  stakingToken: {
    address: '0x0abC957925EC8f71dA8556AB6147E1Bc32e5F0Fe',
    chainId: 56,
    decimals: 18,
    name: 'PancakeSwap Token',
    projectLink: 'https://pancakeswap.finance/',
    symbol: 'CRYPTOS',
  },
  stakingTokenPrice: 0.194972,
  startBlock: undefined,
  tokenPerBlock: '10',
  userDataLoaded: true,
  pricePerFullShare: new BigNumber(143500),
  stakingLimit: new BigNumber(2000),
  totalCakeInVault: new BigNumber(143500),
  totalLockedAmount: new BigNumber(143500),
  totalShares: new BigNumber(143500),
  totalStaked: new BigNumber(143500),
  userData: {
    allowance: new BigNumber(99999),
    stakingTokenBalance: new BigNumber(57),
    stakedBalance: new BigNumber(0),
    pendingReward: new BigNumber(0),
  },
  // userData: {
  //   allowance: new BigNumber(99999),

  //   balance: {
  //     cakeAsBigNumber: new BigNumber(0),
  //     cakeAsDisplayBalance: '0',
  //     cakeAsNumberBalance: 0,
  //   },
  //   cakeAtLastUserAction: new BigNumber(0),
  //   currentOverdueFee: new BigNumber(0),
  //   currentPerformanceFee: new BigNumber(0),
  //   isLoading: false,
  //   lastDepositedTime: '0',
  //   lastUserActionTime: '0',
  //   lockEndTime: '0',
  //   lockStartTime: '0',
  //   locked: false,
  //   lockedAmount: new BigNumber(0),
  //   pendingReward: new BigNumber(0),
  //   stakedBalance: new BigNumber(0),
  //   stakingTokenBalance: new BigNumber(0),
  //   userBoostedShare: new BigNumber(0),
  //   userShares: new BigNumber(0),
  // },
}
